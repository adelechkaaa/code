from collections import deque as dq

n, H = map(int, input().split())
h = list(map(int, input().split()))
w = list(map(int, input().split()))
stul = [(h[i], w[i]) for i in range(n)]

stul.sort()
d, neu = dq(), dq()
sum_h = stul[0][1]
answer = stul[-1][0] + 10**10
d.append(stul[0])
for i in range(1, n):
    if sum_h < H:
        if len(d) == 0:
            d.append(stul[i])
            sum_h += d[-1][1]
        else:
            if len(neu) == 0:
                neu.append(stul[i][0] - d[-1][0])
            else:
                while (len(neu) > 0) and (neu[-1] < stul[i][0] - d[-1][0]):
                    t = neu.pop()
                    if len(neu) == 0:
                        break
                neu.append(stul[i][0] - d[-1][0])
            d.append(stul[i])
            sum_h += d[-1][1]

    if sum_h >= H:
        while sum_h >= H:
            if len(neu) == 0:
                answer = 0
                t = d.pop()
                sum_h -= t[1]
                break
            else:
                answer = min(answer, neu[0])
                t = d.popleft()
                sum_h -= t[1]
                if d[0][0] - t[0] == neu[0]:
                    t = neu.popleft()

while sum_h >= H:
    if len(neu) == 0:
        answer = 0
        t = d.pop()
        break
    else:
        answer = min(answer, neu[0])
        t = d.popleft()
        sum_h -= t[1]
        if d[0][0] - t[0] == neu[0]:
            t = neu.popleft()
print(answer)
